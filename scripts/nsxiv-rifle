#!/bin/sh

# This is a script that loads up every image from a folder into nsxiv
# See https://codeberg.org/nsxiv/nsxiv-extra/src/branch/master/scripts/nsxiv-rifle
# I've configured it to run with -a, -b and -g
# Also, configured images to load by modified date instead of alphabetically, this is something that the load-dir nsxiv extension doesn't do

TMPDIR="${TMPDIR:-/tmp}"
tmp="$TMPDIR/nsxiv_rifle_$$"

is_img_extension() {
    grep -iE '\.(jpe?g|png|gif|svg|webp|tiff|heif|avif|ico|bmp)$'
}

# Don't use this one anymore
listfiles() {
    find -L "$1" -maxdepth 1 -type f -print |
        is_img_extension | sort | tee "$tmp"
}

listfilesbymodifieddate() {
	find -L "$1" -maxdepth 1 -type f -exec stat -c '%Y %n' {} + |
    sort -nr | cut -d' ' -f 2- | is_img_extension | tee "$tmp"
}

open_img() {
    file="$1"; shift;
    # only go through listfilesbymodifieddate() if the file has a valid img extension
    if echo "$file" | is_img_extension >/dev/null 2>&1; then
        trap 'rm -f $tmp' EXIT
        count="$(listfilesbymodifieddate "///${file%/*}" | grep -nF "$file")"
    fi
    if [ -n "$count" ]; then
		res=$(xdpyinfo | awk '/dimensions/{print $2}')
        nsxiv -ab -g $res -i -n "${count%%:*}" "$@" -- < "$tmp"
    else
        # fallback incase file didn't have a valid extension, or we couldn't
        # find it inside the list
        nsxiv "$@" -- "$file"
    fi
}

uri2path() {
    python3 - "$@" <<'___HEREDOC'
from urllib.parse import unquote, urlparse
from sys import argv
for arg in argv[1:]:
    print(unquote(urlparse(arg).path))
___HEREDOC
}

[ "$1" = '--' ] && shift
case "$1" in
    "") echo "ðŸ¤¡ Usage: ${0##*/} {pictures}" >&2; exit 1 ;; # This happens when you call nsxiv-rifle with no args
    /*) open_img "$1" ;;
    "~"/*) open_img "$HOME/${1#"~"/}" ;;
    file:///*) open_img "$(uri2path "$1")" ;;
    trash:///*)
        trash_dir="${XDG_DATA_HOME:-$HOME/.local/share}/Trash/files"
        open_img "${trash_dir}$(uri2path "$1")" -N "nsxiv_trash"
        ;;
    *) open_img "$PWD/$1" ;;
esac
